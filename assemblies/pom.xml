<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns=  "http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>pentaho</groupId>
    <artifactId>pentaho-modeler-parent</artifactId>
    <version>7.0-SNAPSHOT</version>
  </parent>
  <groupId>pentaho</groupId>
  <artifactId>pentaho-modeler-assemblies</artifactId>
  <version>7.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>Pentaho Community Edition Project: ${project.artifactId}</name>
  <description>Pentaho common modeler project.</description>
  <url>http://www.pentaho.com</url>
  <scm>
    <connection>scm:git:git@github.com:pentaho/${project.artifactId}.git</connection>
    <developerConnection>scm:git:git@github.com:pentaho/${project.artifactId}.git</developerConnection>
    <url>scm:git:git@github.com:pentaho/${project.artifactId}.git</url>
  </scm>
  
  <dependencies>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-modeler-gwt</artifactId>
      <version>${project.version}</version>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
          <execution>
            <id>unpack-modules</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-modeler</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                </artifactItem>
                <artifactItem>
                  <groupId>pentaho</groupId>
                  <artifactId>pentaho-modeler-gwt</artifactId>
                  <version>${project.version}</version>
                  <type>jar</type>
                  <outputDirectory>${project.build.directory}/classes</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>target/pentaho-modeler-${project.version}/pentaho-modeler/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <id>default</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${project.build.directory}/classes</classesDirectory>
              <finalName>pentaho-modeler-${project.version}</finalName>                   
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <inherited>false</inherited>
        <configuration>
          <descriptor>src/assembly/bin.xml</descriptor>
          <finalName>pentaho-modeler</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
     </plugins>
   </build>
</project>